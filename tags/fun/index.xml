<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Khoa Pham </title>
        <link>http://khoapham.me/tags/fun/index.xml</link>
        <language>en-us</language>
        <author>Khoa Pham</author>
        <rights>(C) 2016</rights>
        <updated>0001-01-01 00:00:00 &#43;0000 UTC</updated>

        
            
            <item>
                <title>Tower of Hanoi</title>
                <link>http://khoapham.me/blog/tower-of-hanoi/</link>
                <pubDate>Tue, 02 Dec 2014 00:00:00 UTC</pubDate>
                <guid>http://khoapham.me/blog/tower-of-hanoi/</guid>
                <description>&lt;p&gt;One of my favorite childhood game was the &lt;a href=&#34;http://en.wikipedia.org/wiki/Tower_of_Hanoi&#34;&gt;Tower of Hanoi&lt;/a&gt; which I loved playing it
with my neighbor friends all the time. Also, one of my very first project in college
was implementing the tower of Hanoi in C, C++, or Java. I guess this game has sticked with
me for a very long time, so that today I decided to implement it again in my new
favorite language - Ruby. In fact, it&amp;rsquo;s simple, elegant, and easy to implement in ruby.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class TowerOfHanoi
  SRC = 0
  DST = 2
  TEMP = 1

  def initialize(disks: 4)
    @disks = disks
  end

  def run
    move(@disks, SRC, DST, TEMP)
  end

  def move(disks, src, dst, temp)
    return moveFromTo(src, dst) if disks == 1
    move(disks-1, src, temp, dst)
    moveFromTo(src, dst)
    move(disks-1, temp, dst, src)
  end

  def moveFromTo(src, dst)
    puts &amp;quot;Move from #{src} to #{dst}&amp;quot;
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To run the program, open your terminal and try it in your irb:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ irb
require_relative &#39;TowerOfHanoi&#39;
game = TowerOfHanoi.new # or game = TowerOfHanoi.new(disks: 4)
game.run
&lt;/code&gt;&lt;/pre&gt;
</description>
            </item>
            
        

    </channel>
</rss>
